{
  "openapi": "3.0.0",
  "info": {
    "title": "Pet Support API",
    "description": "Pet Support project backend service",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://pet-support.onrender.com",
      "description": "production server"
    },
    {
      "url": "http://localhost:8080",
      "description": "local server"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "User authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users manage endpoints"
    },
    {
      "name": "News",
      "description": "News manage endpoints"
    },
    {
      "name": "Services",
      "description": "Services manage endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices manage endpoints"
    },
    {
      "name": "Pets",
      "description": "Pets manage endpoints"
    }
  ],
  "paths": {
    "/api/news/": {
      "get": {
        "tags": [
          "News"
        ],
        "summary": "Get News",
        "description": "Get a list of news",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to get news. Default is 1.",
            "required": false,
            "minimum": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of news per page. Default is 6.",
            "required": false,
            "minimum": 1,
            "maximum": 100,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of news",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsList"
                },
                "example": [
                  {
                    "id": "615ec59c5bafc50b9a0c3f96",
                    "title": "Example News Article 1",
                    "url": "https://example.com/news/article1",
                    "description": "This is an example news article.",
                    "date": "2021-10-07T00:00:00.000Z"
                  },
                  {
                    "id": "615ec59c5bafc50b9a0c3f96",
                    "title": "Example News Article 2",
                    "url": "https://example.com/news/article2",
                    "description": "This is an example news article.",
                    "date": "2021-11-07T00:00:00.000Z"
                  },
                  {
                    "id": "615ec59c5bafc50b9a0c3f96",
                    "title": "Example News Article 3",
                    "url": "https://example.com/news/article3",
                    "description": "This is an example news article.",
                    "date": "2021-12-07T00:00:00.000Z"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "News not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "News not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/friends/": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Get Services",
        "description": "Get a list of services",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number to get news. Default is 1.",
            "required": false,
            "minimum": 1,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Maximum number of news per page. Default is 9.",
            "required": false,
            "minimum": 1,
            "maximum": 100,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "example",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/servicesList"
                },
                "example": [
                  {
                    "workDays": [],
                    "_id": "63ee67812e510dcbab7fbf37",
                    "title": "Whiskas",
                    "url": "https://www.whiskas.ua/",
                    "addressUrl": null,
                    "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_285.png",
                    "address": null,
                    "phone": "380800500155",
                    "email": null
                  },
                  {
                    "_id": "63ee67812e510dcbab7fbf2f",
                    "title": "Притулок для бездомних тварин 'Сіріус'",
                    "url": "https://dogcat.com.ua",
                    "addressUrl": "https://goo.gl/maps/iq8NXEUf31EAQCzc6",
                    "imageUrl": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_287.png",
                    "address": "Fedorivka, Kyiv Oblast, Ukraine, 07372",
                    "workDays": [
                      {
                        "isOpen": false
                      },
                      {
                        "isOpen": false
                      },
                      {
                        "isOpen": false
                      },
                      {
                        "isOpen": false
                      },
                      {
                        "isOpen": false
                      },
                      {
                        "isOpen": true,
                        "from": "11:00",
                        "to": "16:00"
                      },
                      {
                        "isOpen": true,
                        "from": "11:00",
                        "to": "16:00"
                      }
                    ],
                    "phone": "380931934069",
                    "email": null
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Services not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Services not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Registration",
        "description": "Creates a new user",
        "parameters": [],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "example": {
                  "user": {
                    "id": "63ef667fc42e9578d819c035",
                    "email": "Jhon.Doe@example.com",
                    "name": "Jhon Doe"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Email in use"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              },
              "example": {
                "email": "Jhon.Doe@example.com",
                "password": "password_example",
                "name": "Jhon Doe",
                "city": "Limburg, Netherlands",
                "phone": "+31-77-2065000"
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Authorizes the user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User login successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizedUser"
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZjIxYTJkOTFlNTY3NzQyMzRkMWM0MCIsImlhdCI6MTY3NjgxMDgxN30.55lDbmtnFbdymuZKWHo_tTudKym1APGsCDSb7XFlIVQ",
                  "user": {
                    "id": "63ef667fc42e9578d819c035",
                    "email": "Jhon.Doe@example.com",
                    "name": "Jhon Doe"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Email not verified",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Email not verified"
                }
              }
            }
          },
          "401": {
            "description": "Email or password is wrong",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Email or password is wrong"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              },
              "example": {
                "email": "Jhon.Doe@example.com",
                "password": "password_example"
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout",
        "description": "Terminates the user session",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User logout successfully"
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/auth/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user info",
        "description": "refreshing user info",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Refreshing user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshUserInfo"
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZmJhNTI5OWZjOGQyZDVhMGZiZDZlZCIsImlhdCI6MTY3NzYxMzIyOH0.Z4VNvqhOuYmI-_1H4yGAqgi9uF3tnHyT4SgJE-Zajjw",
                  "user": {
                    "_id": "63fba5299fc8d2d5a0fbd6ed",
                    "name": "user@gmail.com",
                    "phone": "+380951231212",
                    "city": "City, Counry",
                    "avatarURL": "https://res.cloudinary.com/datobb5og/image/upload/v1677437744/avatars/rpohpgbnmigpfdlrkcfp.jpg"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/auth/verify/{verificationToken}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Token verification",
        "description": "Verifies the token via email letter link",
        "parameters": [
          {
            "name": "verificationToken",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Verification token"
          }
        ],
        "responses": {
          "200": {
            "description": "Verification successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Result detail",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "example": {
                  "message": "Verification successful"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/verify": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Email verification",
        "description": "Sends a verification letter to the user",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Refreshing user info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshUserInfo"
                },
                "example": {
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZmJhNTI5OWZjOGQyZDVhMGZiZDZlZCIsImlhdCI6MTY3NzYxMzIyOH0.Z4VNvqhOuYmI-_1H4yGAqgi9uF3tnHyT4SgJE-Zajjw",
                  "user": {
                    "_id": "63fba5299fc8d2d5a0fbd6ed",
                    "name": "user@gmail.com",
                    "phone": "+380951231212",
                    "city": "City, Counry",
                    "avatarURL": "https://res.cloudinary.com/datobb5og/image/upload/v1677437744/avatars/rpohpgbnmigpfdlrkcfp.jpg"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Verification has already been passed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Verification has already been passed"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": [
                  "email"
                ]
              },
              "example": {
                "email": "Jhon.Doe@example.com"
              }
            }
          }
        }
      }
    },
    "/api/auth/google": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Redirects user to Google OAuth2 authorization page.",
        "description": "",
        "parameters": [],
        "responses": {
          "302": {
            "description": "Redirects user to Google OAuth2 authorization page."
          }
        }
      }
    },
    "/api/auth/google-redirect": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Handles the redirect from Google OAuth2 authorization page.",
        "description": "",
        "parameters": [],
        "responses": {
          "302": {
            "description": "Redirects user to a client page with a JWT token"
          }
        }
      }
    },
    "/api/user/update": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update user",
        "description": "Update user info",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User info updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserInfo"
                },
                "example": {
                  "_id": "63f3f97a70e0b66d0946a306",
                  "name": "userName",
                  "password": "$2b$10$KWIFWBtrmtr0LzUHdienQerLvjLjoc8wUw6nEgI0c0ssOk2rrBSpG",
                  "email": "user@gmail.com",
                  "city": "qweqwe",
                  "phone": "880005553535",
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZjNmOTdhNzBlMGI2NmQwOTQ2YTMwNiIsImlhdCI6MTY3NzI0NTc0MywiZXhwIjoxNjc3MjQ5MzQzfQ.sCSOdq7reEHQA9vvsLguEY0H1246F-wCq75DlN4NVlU",
                  "favorites": [
                    "63f4ae01b692bc63eb7c2d48",
                    "63f5238cb8c2f29e47d1bdb5",
                    "63f5238cb8c2f29e47d1bdb5"
                  ],
                  "userPets": [],
                  "verificationToken": null,
                  "verify": true,
                  "createdAt": "2023-02-20T22:51:38.667Z",
                  "updatedAt": "2023-02-24T13:35:43.618Z"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserInfo"
              }
            }
          }
        }
      }
    },
    "/api/user/current": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user info",
        "description": "Get current user info",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                },
                "example": {
                  "_id": "63f3f97a70e0b66d0946a306",
                  "name": "userName",
                  "password": "$2b$10$KWIFWBtrmtr0LzUHdienQerLvjLjoc8wUw6nEgI0c0ssOk2rrBSpG",
                  "email": "user@gmail.com",
                  "city": "qweqwe",
                  "phone": "880005553535",
                  "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzZjNmOTdhNzBlMGI2NmQwOTQ2YTMwNiIsImlhdCI6MTY3NzI0NTc0MywiZXhwIjoxNjc3MjQ5MzQzfQ.sCSOdq7reEHQA9vvsLguEY0H1246F-wCq75DlN4NVlU",
                  "favorites": [
                    "63f4ae01b692bc63eb7c2d48",
                    "63f5238cb8c2f29e47d1bdb5",
                    "63f5238cb8c2f29e47d1bdb5"
                  ],
                  "userPets": [],
                  "verificationToken": null,
                  "verify": true,
                  "createdAt": "2023-02-20T22:51:38.667Z",
                  "updatedAt": "2023-02-24T13:35:43.618Z"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/notices/": {
      "post": {
        "tags": [
          "Notices"
        ],
        "summary": "Create a notice",
        "description": "Create a notice ",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Notice created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notice"
                },
                "example": {
                  "category": "in-good-hands",
                  "title": "title",
                  "name": "awesomeName",
                  "birthday": "01.01.2000",
                  "breed": "breed",
                  "gender": "bender",
                  "location": "Location",
                  "price": "1",
                  "image": "https://res.cloudinary.com/datobb5og/image/upload/v1677241526/avatars/zsbsnyquqosxddfnfxbl.jpg",
                  "comments": "some comments",
                  "owner": "63f3f97a70e0b66d0946a306",
                  "_id": "63f8acb731d1d353d54646fc"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Request"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Notice"
              }
            }
          }
        }
      }
    },
    "/api/notices/favorites": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "Get favorite notices",
        "description": "Get favorite notices of a user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User favorites notices list.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noticesList"
                },
                "example": [
                  {
                    "_id": "63f496899d811400fbd1aacc",
                    "category": "in-good-hands",
                    "title": "Calico cat with dog personality",
                    "name": "Ronie",
                    "birthday": "10.09.2021",
                    "breed": "Calico cat",
                    "gender": "female",
                    "location": "Kerry, Ireland",
                    "price": "free",
                    "image": "",
                    "comments": "Friendy cat, can walk long distance with a master like a dog. Good fo kids. Bring you luck",
                    "owner": "63f495d79d811400fbd1aac5"
                  },
                  {
                    "_id": "63f4969e9d811400fbd1aacf",
                    "category": "in-good-hands",
                    "title": "Calico cat with dog personality",
                    "name": "Ronie",
                    "birthday": "10.09.2021",
                    "breed": "Calico cat",
                    "gender": "female",
                    "location": "Kerry, Ireland",
                    "price": "free",
                    "image": "",
                    "comments": "Friendy cat, can walk long distance with a master like a dog. Good fo kids. Bring you luck",
                    "owner": "63f495d79d811400fbd1aac5"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Notices not found in favorite",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Notices not found in favorite"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/notices/own": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "Get all user notices",
        "description": "Return all notices created by user",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "all user notices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noticesList"
                },
                "example": [
                  {
                    "_id": "63f496899d811400fbd1aacc",
                    "category": "in-good-hands",
                    "title": "Calico cat with dog personality",
                    "name": "Ronie",
                    "birthday": "10.09.2021",
                    "breed": "Calico cat",
                    "gender": "female",
                    "location": "Kerry, Ireland",
                    "price": "free",
                    "image": "",
                    "comments": "Friendy cat, can walk long distance with a master like a dog. Good fo kids. Bring you luck",
                    "owner": "63f495d79d811400fbd1aac5"
                  },
                  {
                    "_id": "63f4969e9d811400fbd1aacf",
                    "category": "in-good-hands",
                    "title": "Calico cat with dog personality",
                    "name": "Ronie",
                    "birthday": "10.09.2021",
                    "breed": "Calico cat",
                    "gender": "female",
                    "location": "Kerry, Ireland",
                    "price": "free",
                    "image": "",
                    "comments": "Friendy cat, can walk long distance with a master like a dog. Good fo kids. Bring you luck",
                    "owner": "63f495d79d811400fbd1aac5"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Notices not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Notices not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/notices/{category}": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "Get Notices by Category",
        "description": "Get all notices by category",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Category name"
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notices by category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noticesList"
                },
                "example": [
                  {
                    "_id": "63f496899d811400fbd1aacc",
                    "category": "in-good-hands",
                    "title": "Calico cat with dog personality",
                    "name": "Ronie",
                    "birthday": "10.09.2021",
                    "breed": "Calico cat",
                    "gender": "female",
                    "location": "Kerry, Ireland",
                    "price": "free",
                    "image": "",
                    "comments": "Friendy cat, can walk long distance with a master like a dog. Good fo kids. Bring you luck",
                    "owner": "63f495d79d811400fbd1aac5"
                  },
                  {
                    "_id": "63f4969e9d811400fbd1aacf",
                    "category": "in-good-hands",
                    "title": "Calico cat with dog personality",
                    "name": "Ronie",
                    "birthday": "10.09.2021",
                    "breed": "Calico cat",
                    "gender": "female",
                    "location": "Kerry, Ireland",
                    "price": "free",
                    "image": "",
                    "comments": "Friendy cat, can walk long distance with a master like a dog. Good fo kids. Bring you luck",
                    "owner": "63f495d79d811400fbd1aac5"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Notices not found for category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Notices not found for category"
                }
              }
            }
          }
        }
      }
    },
    "/api/notices/{noticeId}": {
      "get": {
        "tags": [
          "Notices"
        ],
        "summary": "Get Notice by ID",
        "description": "Returns a notice with the given ID",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notice by id",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noticeById"
                },
                "example": {
                  "_id": "63f49f3f9d811400fbd1aad2",
                  "category": "in-good-hands",
                  "title": "Calico cat with dog personality",
                  "name": "Ronie",
                  "birthday": "10.09.2021",
                  "breed": "Calico cat",
                  "gender": "female",
                  "location": "Kerry, Ireland",
                  "price": "free",
                  "image": "",
                  "comments": "Friendy cat, can walk long distance with a master like a dog. Good fo kids. Bring you luck",
                  "owner": "63f495d79d811400fbd1aac5"
                }
              }
            }
          },
          "404": {
            "description": "Notice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Notice not found"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Notices"
        ],
        "summary": "Delete a notice",
        "description": "Delete a notice with the given ID.",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the notice to delete."
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted notice by ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/noticeById"
                },
                "example": {
                  "_id": "63f49f3f9d811400fbd1aad2",
                  "category": "in-good-hands",
                  "title": "Calico cat with dog personality",
                  "name": "Ronie",
                  "birthday": "10.09.2021",
                  "breed": "Calico cat",
                  "gender": "female",
                  "location": "Kerry, Ireland",
                  "price": "free",
                  "image": "",
                  "comments": "Friendy cat, can walk long distance with a master like a dog. Good fo kids. Bring you luck",
                  "owner": "63f495d79d811400fbd1aac5"
                }
              }
            }
          },
          "404": {
            "description": "Notice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Notice not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/notices/favorite/{noticeId}": {
      "patch": {
        "tags": [
          "Notices"
        ],
        "summary": "Add notice to user favorites",
        "description": "Add the notice with the given ID to the user favorites list.",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User favorites with the newly added notice.",
            "example": {
              "user": {
                "email": "user.email@mail.com",
                "favorites": [
                  "63f4ae01b692bc63eb7c2d48",
                  "63f5238cb8c2f29e47d1bdb5",
                  "63f5fc0baf1b6464dbc75f14",
                  "63f5238cb8c2f29e47d1bdb5"
                ]
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addFavoriteNotice"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/addFavoriteNotice"
                }
              }
            }
          },
          "409": {
            "description": "Notice already in notices list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Notice already in notices list"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Notices"
        ],
        "summary": "Delete a notice",
        "description": "Delete a notice with the given ID.",
        "parameters": [
          {
            "name": "noticeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notice success deleted",
            "example": {
              "user": {
                "email": "user.email@mail.com",
                "favorites": [
                  "63f4ae01b692bc63eb7c2d48",
                  "63f5238cb8c2f29e47d1bdb5",
                  "63f5fc0baf1b6464dbc75f14",
                  "63f5238cb8c2f29e47d1bdb5"
                ]
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/addFavoriteNotice"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/addFavoriteNotice"
                }
              }
            }
          },
          "404": {
            "description": "Notice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Notice not found"
                }
              }
            }
          },
          "409": {
            "description": "This notice is not in favorites",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "This notice is not in favorites"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/pets/": {
      "get": {
        "tags": [
          "Pets"
        ],
        "summary": "Get user pets",
        "description": "Get user pets list",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of pets",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petsList"
                },
                "example": [
                  {
                    "_id": "63f7c22dd0ce4a68a9a09c3c",
                    "name": "petName",
                    "birthday": "01.01.1990",
                    "breed": "breed",
                    "comments": "noComments",
                    "owner": "63f3f97a70e0b66d0946a306",
                    "__v": 0
                  },
                  {
                    "_id": "63f7c531d0ce4a68a9a09c3f",
                    "name": "petName1",
                    "birthday": "01.01.1990",
                    "breed": "breed",
                    "comments": "noComments",
                    "owner": "63f3f97a70e0b66d0946a306",
                    "__v": 0
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Notice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Notice not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Pets"
        ],
        "summary": "Create a pet",
        "description": "Create a pet in user pet list",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Pet created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pet"
                },
                "example": {
                  "name": "awesomeName",
                  "birthday": "01.01.2000",
                  "breed": "hobo",
                  "comments": "Some comments",
                  "owner": "63f3f97a70e0b66d0946a306",
                  "petImage": "https://res.cloudinary.com/datobb5og/image/upload/v1677242798/avatars/repdbyueunorx0ormisp.jpg",
                  "_id": "63f8b1af31d1d353d546470b",
                  "__v": 0
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Pet"
              }
            }
          }
        }
      }
    },
    "/api/pets/{petId}": {
      "delete": {
        "tags": [
          "Pets"
        ],
        "summary": "Delete user pet",
        "description": "Delete user pet from pet list",
        "parameters": [
          {
            "name": "petId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted pet",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/petsList"
                },
                "example": {
                  "message": "success"
                }
              }
            }
          },
          "404": {
            "description": "Pet not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Pet not found"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "NewUser": {
        "type": "object",
        "description": "User data",
        "properties": {
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "password": {
            "type": "string",
            "description": "Password"
          },
          "name": {
            "type": "string",
            "description": "Name"
          },
          "city": {
            "type": "string",
            "description": "City, region"
          },
          "phone": {
            "type": "string",
            "description": "Phone number"
          }
        },
        "required": [
          "email",
          "password",
          "name",
          "city",
          "phone"
        ]
      },
      "User": {
        "type": "object",
        "description": "User data",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique user ID"
              },
              "email": {
                "type": "string",
                "description": "Email address"
              },
              "name": {
                "type": "string",
                "description": "Name"
              }
            }
          }
        }
      },
      "AuthorizedUser": {
        "type": "object",
        "description": "User data",
        "properties": {
          "token": {
            "type": "string",
            "description": "Token"
          },
          "user": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Unique user ID"
              },
              "email": {
                "type": "string",
                "description": "Email address"
              },
              "name": {
                "type": "string",
                "description": "Name"
              }
            }
          }
        }
      },
      "NewsList": {
        "type": "array",
        "description": "News",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "News id"
            },
            "title": {
              "type": "string",
              "description": "News title"
            },
            "url": {
              "type": "string",
              "description": "News url"
            },
            "description": {
              "type": "string",
              "description": "News description"
            },
            "date": {
              "type": "string",
              "description": "News date"
            }
          }
        }
      },
      "noticesList": {
        "type": "array",
        "description": "Notices",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Notice id"
            },
            "category": {
              "type": "string",
              "description": "Notice category"
            },
            "title": {
              "type": "string",
              "description": "Notice title"
            },
            "name": {
              "type": "string",
              "description": "Notice name"
            },
            "birthday": {
              "type": "string",
              "description": "Notice birthday"
            },
            "breed": {
              "type": "string",
              "description": "Notice breed"
            },
            "gender": {
              "type": "string",
              "description": "Notice gender"
            },
            "location": {
              "type": "string",
              "description": "Notice location"
            },
            "price": {
              "type": "string",
              "description": "Notice price"
            },
            "image": {
              "type": "string",
              "description": "Notice image url"
            },
            "comments": {
              "type": "string",
              "description": "Notice comments"
            },
            "owner": {
              "type": "string",
              "description": "Notice owner id"
            }
          }
        }
      },
      "userOwnNoticeList": {
        "type": "array",
        "description": "Notices",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Notice id"
            },
            "category": {
              "type": "string",
              "description": "Notice category"
            },
            "title": {
              "type": "string",
              "description": "Notice title"
            },
            "birthday": {
              "type": "string",
              "description": "Notice birthday"
            },
            "breed": {
              "type": "string",
              "description": "Notice breed"
            },
            "location": {
              "type": "string",
              "description": "Notice location"
            },
            "price": {
              "type": "string",
              "description": "Notice price"
            },
            "image": {
              "type": "string",
              "description": "Notice image url"
            }
          }
        }
      },
      "noticeById": {
        "type": "object",
        "description": "Notice data",
        "properties": {
          "_id": {
            "type": "string",
            "description": "Notice id"
          },
          "category": {
            "type": "string",
            "description": "Notice category"
          },
          "title": {
            "type": "string",
            "description": "Notice title"
          },
          "name": {
            "type": "string",
            "description": "Notice name"
          },
          "birthday": {
            "type": "string",
            "description": "Notice birthday"
          },
          "breed": {
            "type": "string",
            "description": "Notice breed"
          },
          "gender": {
            "type": "string",
            "description": "Notice gender"
          },
          "location": {
            "type": "string",
            "description": "Notice location"
          },
          "price": {
            "type": "string",
            "description": "Notice price"
          },
          "image": {
            "type": "string",
            "description": "Notice image url"
          },
          "comments": {
            "type": "string",
            "description": "Notice comments"
          },
          "owner": {
            "type": "string",
            "description": "Notice owner id"
          }
        }
      },
      "addFavoriteNotice": {
        "type": "object",
        "description": "User favorite notices data",
        "properties": {
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "description": "User email",
                "example": "user.mail@mail.com"
              },
              "favorites": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "ID of the favorite notice",
                  "example": "63f4ae01b692bc63eb7c2d48"
                }
              }
            }
          }
        }
      },
      "servicesList": {
        "type": "array",
        "description": "Services",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Service id"
            },
            "title": {
              "type": "string",
              "description": "Service title"
            },
            "url": {
              "type": "string",
              "description": "Service url"
            },
            "addressUrl": {
              "type": "string",
              "description": "Service addressUrl"
            },
            "imageUrl": {
              "type": "string",
              "description": "Service imageUrl"
            },
            "address": {
              "type": "string",
              "description": "Service address"
            },
            "phone": {
              "type": "string",
              "description": "Service phone"
            },
            "email": {
              "type": "string",
              "description": "Service email"
            },
            "workDays": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "isOpen": {
                    "type": "string"
                  },
                  "from": {
                    "type": "string"
                  },
                  "to": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "petsList": {
        "type": "array",
        "description": "Pets",
        "items": {
          "type": "object",
          "properties": {
            "_id": {
              "type": "string",
              "description": "Pet id"
            },
            "name": {
              "type": "string",
              "description": "Pet name"
            },
            "birthday": {
              "type": "string",
              "description": "Pet birthday"
            },
            "breed": {
              "type": "string",
              "description": "Pet breed"
            },
            "comments": {
              "type": "string",
              "description": "Pet comments"
            },
            "owner": {
              "type": "string",
              "description": "Pet owner"
            },
            "__v": {
              "type": "number",
              "description": "???"
            }
          }
        }
      },
      "Notice": {
        "type": "object",
        "description": "Notice data",
        "properties": {
          "category": {
            "type": "string",
            "description": "Notice category"
          },
          "title": {
            "type": "string",
            "description": "Notice title"
          },
          "name": {
            "type": "string",
            "description": "Notice name"
          },
          "birthday": {
            "type": "string",
            "description": "Notice birthday"
          },
          "breed": {
            "type": "string",
            "description": "Notice breed"
          },
          "gender": {
            "type": "string",
            "description": "Notice gender"
          },
          "location": {
            "type": "string",
            "description": "Notice location"
          },
          "price": {
            "type": "string",
            "description": "Notice price"
          },
          "image": {
            "type": "file",
            "description": "Notice image"
          },
          "comments": {
            "type": "string",
            "description": "Notice comments"
          }
        },
        "required": [
          "category",
          "title",
          "name",
          "gender",
          "location"
        ]
      },
      "Pet": {
        "type": "object",
        "description": "Pet data",
        "properties": {
          "name": {
            "type": "string",
            "description": "Pet name"
          },
          "birthday": {
            "type": "string",
            "description": "Pet bitrhday"
          },
          "breed": {
            "type": "string",
            "description": "Pet breed"
          },
          "comments": {
            "type": "string",
            "description": "comments"
          },
          "petImage": {
            "type": "file",
            "description": "Pet image"
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "description": "UserInfo data",
        "properties": {
          "_id": {
            "type": "string",
            "description": "UserInfo id"
          },
          "name": {
            "type": "string",
            "description": "UserInfo name"
          },
          "password": {
            "type": "string",
            "description": "UserInfo password"
          },
          "email": {
            "type": "string",
            "description": "UserInfo email"
          },
          "city": {
            "type": "string",
            "description": "UserInfo city"
          },
          "phone": {
            "type": "string",
            "description": "UserInfo phone"
          },
          "token": {
            "type": "string",
            "description": "UserInfo token"
          },
          "favorites": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of the favorite notice",
              "example": "63f4ae01b692bc63eb7c2d48"
            }
          },
          "userPets": {
            "type": "array",
            "description": "UserInfo token"
          },
          "verificationToken": {
            "type": "boolean",
            "description": "UserInfo verificationToken"
          },
          "verify": {
            "type": "boolean",
            "description": "UserInfo verify"
          },
          "createdAt": {
            "type": "string",
            "description": "UserInfo createdAt"
          },
          "updatedAt": {
            "type": "string",
            "description": "UserInfo updatedAt"
          }
        }
      },
      "UpdateUserInfo": {
        "type": "object",
        "description": "UpdateUserInfo data",
        "properties": {
          "name": {
            "type": "string",
            "description": "UpdateUserInfo name"
          },
          "email": {
            "type": "string",
            "description": "UpdateUserInfo email"
          },
          "birthday": {
            "type": "string",
            "description": "UpdateUserInfo birthday"
          },
          "phone": {
            "type": "string",
            "description": "UpdateUserInfo phone"
          },
          "city": {
            "type": "string",
            "description": "UpdateUserInfo city"
          },
          "avatarURL": {
            "type": "file",
            "description": "UpdateUserInfo avatar"
          }
        }
      },
      "RefreshUserInfo": {
        "type": "object",
        "description": "UpdateUserInfo data",
        "properties": {
          "token": {
            "type": "string",
            "description": "RefreshUserInfo token"
          },
          "user": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "string",
                "description": "RefreshUserInfo _id"
              },
              "name": {
                "type": "string",
                "description": "RefreshUserInfo name"
              },
              "email": {
                "type": "string",
                "description": "RefreshUserInfo email"
              },
              "phone": {
                "type": "string",
                "description": "RefreshUserInfo phone"
              },
              "city": {
                "type": "file",
                "description": "RefreshUserInfo city"
              },
              "avatarURL": {
                "type": "file",
                "description": "RefreshUserInfo avatarURL"
              }
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "description": "Error detail",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message"
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "name": "Bearer Authentication",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
